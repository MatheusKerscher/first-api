{
  "openapi": "3.1.0",
  "info": {
    "title": "Node JS API",
    "description": "Node JS API with Express and Sequelize ORM",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "URL for development"
    }
  ],
  "paths": {
    "/categories": {
      "get": {
        "summary": "Return a list of categories",
        "tags": [
          "Category"
        ],
        "responses": {
          "200": {
            "description": "A list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a category",
        "tags": [
          "Category"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Type Script"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The category was just created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Validation fields error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Os seguintes erros foram encontrados: o título é obrigatório"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "summary": "Return a category",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Nenhum registro foi encontrado com o ID informado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Edit a category",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Type Script"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Registro atualizado"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Update fail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Falha ao atualizar registro"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Validation fields error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Os seguintes erros foram encontrados: o título é obrigatório"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a category",
        "tags": [
          "Category"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Category deleted"
          },
          "400": {
            "description": "Update fail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Erro ao remover registro do banco"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/courses": {
      "get": {
        "summary": "Return a list of courses",
        "tags": [
          "Course"
        ],
        "responses": {
          "200": {
            "description": "A list of courses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Course"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a course",
        "tags": [
          "Course"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Type Script"
                  },
                  "description": {
                    "type": "string",
                    "example": "Curso de Type Script"
                  },
                  "start_date": {
                    "type": "string",
                    "example": "2023-01-01"
                  },
                  "category_id": {
                    "type": "string",
                    "example": "ef67f570-0a68-4a34-856a-266261a9adc2"
                  },
                  "professor_id": {
                    "type": "string",
                    "example": "f316459e-f2a4-4c5b-9b4f-3869db5fd2bd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Course created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "404": {
            "description": "Validation fields error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Os seguintes erros foram encontrados: o título é obrigatório"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/courses/crowded": {
      "get": {
        "summary": "Return a list of crowded courses",
        "tags": [
          "Course"
        ],
        "responses": {
          "200": {
            "description": "A list of courses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "course_id": {
                        "type": "string",
                        "example": "05fa9e4d-26df-4ff6-a566-677e64126e0a"
                      },
                      "count": {
                        "type": "number",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/courses/{id}": {
      "get": {
        "summary": "Return a course",
        "tags": [
          "Course"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Course found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Course"
                }
              }
            }
          },
          "404": {
            "description": "Course not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Nenhum registro foi encontrado com o ID informado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Edit a course",
        "tags": [
          "Course"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Type Script"
                  },
                  "description": {
                    "type": "string",
                    "example": "Curso de Type Script"
                  },
                  "start_date": {
                    "type": "string",
                    "example": "2023-01-01"
                  },
                  "category_id": {
                    "type": "string",
                    "example": "ef67f570-0a68-4a34-856a-266261a9adc2"
                  },
                  "professor_id": {
                    "type": "string",
                    "example": "f316459e-f2a4-4c5b-9b4f-3869db5fd2bd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Registro atualizado"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Update fail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Falha ao atualizar registro"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Validation fields error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Os seguintes erros foram encontrados: o título é obrigatório"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a course",
        "tags": [
          "Course"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Course deleted"
          },
          "400": {
            "description": "Update fail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Erro ao remover registro do banco"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/people": {
      "get": {
        "summary": "Return a list of people",
        "tags": [
          "Person"
        ],
        "responses": {
          "200": {
            "description": "A list of people",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a person",
        "tags": [
          "Person"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Solange Estudante"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "solange@email.com"
                  },
                  "cpf": {
                    "type": "string",
                    "example": "63058133022"
                  },
                  "active": {
                    "type": "boolean",
                    "example": true
                  },
                  "role": {
                    "type": "string",
                    "example": "estudante"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Person created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "404": {
            "description": "Validation fields error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Os seguintes erros foram encontrados: o nome deve conter entre 3 e 30 caracteres"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/people/active": {
      "get": {
        "summary": "Return a list of active people",
        "tags": [
          "Person"
        ],
        "responses": {
          "200": {
            "description": "A list of active people",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Person"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/people/{id}": {
      "get": {
        "summary": "Return a person",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The person",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "404": {
            "description": "Person not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Nenhum registro foi encontrado com o ID informado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Edit a person",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Solange Estudante"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "solange@email.com"
                  },
                  "cpf": {
                    "type": "string",
                    "example": "63058133022"
                  },
                  "active": {
                    "type": "boolean",
                    "example": true
                  },
                  "role": {
                    "type": "string",
                    "example": "estudante"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Registro atualizado"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Update fail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Falha ao atualizar registro"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Validation fields error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Os seguintes erros foram encontrados: informe um e-mail válido"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/people/{id}/disable": {
      "put": {
        "summary": "Disable a person",
        "description": "Disable a person and cancel your registrations",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Person disabled and registrations canceled"
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/people/{student_id}/activeRegistrations": {
      "get": {
        "summary": "Return a list of active registrations of the person",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of active registrations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Registration"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/people/{student_id}/registrations": {
      "get": {
        "summary": "Return a list of registrations of the person",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of registrations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Registration"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a registration for the person",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "matriculado"
                  },
                  "course_id": {
                    "type": "string",
                    "example": "c3842fbf-2c07-4e89-8e73-372e049e41fd"
                  },
                  "student_id": {
                    "type": "string",
                    "example": "fe9f60a8-18ca-4c84-ae75-59f623065607"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registration"
                }
              }
            }
          },
          "404": {
            "description": "Validation fields error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Os seguintes erros foram encontrados: o status é obrigatório"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/people/{student_id}/registrations/confirmed": {
      "get": {
        "summary": "Return the person active registration list and the count of registrations",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of people",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "number",
                      "example": 1
                    },
                    "registrations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Registration"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Nenhum registro encontrado"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/people/{student_id}/registrations/{id}": {
      "get": {
        "summary": "Return a registration of the person",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The registration",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registration"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Edit the registration of the person",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string",
                    "example": "matriculado"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Registration"
                }
              }
            }
          },
          "404": {
            "description": "Validation fields error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Os seguintes erros foram encontrados: o status é obrigatório"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete the registration of the person",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "student_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Registration deleted"
          },
          "400": {
            "description": "Update fail",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Erro ao remover registro do banco"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        }
      },
      "Course": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "5498475d-bfb9-48ae-8b21-70f0a4ff3f02"
          },
          "title": {
            "type": "string",
            "example": "API com Express"
          },
          "description": {
            "type": "string",
            "example": "Curso de API com Express e MongoDB"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "example": "2023-01-01"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-09T23:16:17.057Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-09T23:16:17.057Z"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "category_id": {
            "type": "string",
            "format": "uuid",
            "example": "ef67f570-0a68-4a34-856a-266261a9adc2"
          },
          "professor_id": {
            "type": "string",
            "format": "uuid",
            "example": "f316459e-f2a4-4c5b-9b4f-3869db5fd2bd"
          }
        }
      },
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "fe9f60a8-18ca-4c84-ae75-59f623065607"
          },
          "name": {
            "type": "string",
            "example": "Solange Estudante"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "solange@email.com"
          },
          "cpf": {
            "type": "string",
            "example": "63058133022"
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "role": {
            "type": "string",
            "example": "estudante"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-04T17:45:32.435Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-04T17:45:32.435Z"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        }
      },
      "Registration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "example": "8f403e84-7bea-485d-b741-6946afa65991"
          },
          "status": {
            "type": "string",
            "example": "matriculado"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-10T23:20:36.531Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-10T23:20:36.531Z"
          },
          "deletedAt": {
            "type": [
              "string",
              "null"
            ],
            "example": null
          },
          "course_id": {
            "type": "string",
            "format": "uuid",
            "example": "c3842fbf-2c07-4e89-8e73-372e049e41fd"
          },
          "student_id": {
            "type": "string",
            "format": "uuid",
            "example": "fe9f60a8-18ca-4c84-ae75-59f623065607"
          }
        }
      },
      "ServerErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 500
          },
          "message": {
            "type": "string",
            "example": "Ocorreu um erro interno no sistema"
          }
        }
      }
    }
  }
}